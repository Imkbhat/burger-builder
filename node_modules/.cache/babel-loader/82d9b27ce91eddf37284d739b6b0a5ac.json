{"ast":null,"code":"import _objectSpread from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      purchasing: false\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelOrder = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      _this.props.history.push(\"/checkout\");\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      ;\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    }\n    /*addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      //immutable way of changing state of ingredients\n      const updatedIngredients = {\n        ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n      this.updatePurchaseState(updatedIngredients);\n    };\n     removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n       if (oldCount <= 0) {\n        return;\n      }\n      const updatedCount = oldCount - 1;\n      //immutable way of changing state of ingredients\n      const updatedIngredients = {\n        ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n      this.updatePurchaseState(updatedIngredients);\n    };*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disableInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disableInfo) {\n        disableInfo[key] = disableInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n\n      if (this.props.ings) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disableInfo,\n          purchasable: this.updatePurchaseState(this.props.ings),\n          ordered: this.purchaseHandler,\n          price: this.props.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.props.ings,\n          purchaseCancelled: this.purchaseCancelOrder,\n          purchaseContinued: this.purchaseContinueHandler,\n          orderPrice: this.props.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch(burgerBuilderActions.addIngredient(ingName));\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch(burgerBuilderActions.removeIngredient(ingName));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder));","map":{"version":3,"sources":["/home/vbg/Downloads/Kiran-Softwares/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","burgerBuilderActions","BurgerBuilder","state","purchasing","purchaseHandler","setState","purchaseCancelOrder","purchaseContinueHandler","props","history","push","ingredients","sum","Object","keys","map","igKey","reduce","el","disableInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","price","mapStateToProps","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\n\nclass BurgerBuilder extends Component {\n  // constructor(props) {\n  //     super(props) {\n  //         this.state = {...props}\n  //     };\n  // }\n\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    ;\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n\n    return sum > 0;\n  }\n\n  /*addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    //immutable way of changing state of ingredients\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    //immutable way of changing state of ingredients\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceDeduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceDeduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };*/\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelOrder = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.history.push(\"/checkout\");\n  };\n\n  render() {\n    const disableInfo = {\n      ...this.props.ings\n    };\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = <Spinner />;\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disableInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            price={this.props.price}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCancelled={this.purchaseCancelOrder}\n          purchaseContinued={this.purchaseContinueHandler}\n          orderPrice={this.props.price}\n        />\n      );\n    }\n\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelOrder}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName =>\n      dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingName))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder));\n"]},"metadata":{},"sourceType":"module"}