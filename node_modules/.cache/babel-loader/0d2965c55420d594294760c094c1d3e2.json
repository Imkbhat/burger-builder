{"ast":null,"code":"import _objectSpread from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/vbg/Downloads/Kiran-Softwares/burger-builder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../axios-orders\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport \"./ContactData.css\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nvar ContactData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Name\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        street: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Street\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        zipCode: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Zip Code\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        country: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Your Country\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your EMail\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        deliveryMethod: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: \"fastest\",\n              displayValue: \"Fastest\"\n            }, {\n              value: \"cheapest\",\n              displayValue: \"Cheapest\"\n            }]\n          },\n          value: \"\",\n          validation: {},\n          valid: true\n        }\n      },\n      loading: false,\n      formIsValid: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault(); //console.log(this.props.ingredients);\n\n      _this.setState({\n        loading: true\n      });\n\n      var formData = {};\n\n      for (var formElementIndentifier in _this.state.orderForm) {\n        formData[formElementIndentifier] = _this.state.orderForm[formElementIndentifier].value;\n      }\n\n      var order = {\n        ingredients: _this.props.ings,\n        price: _this.props.price,\n        orderData: formData\n      };\n      axios.post(\"/orders.json\", order).then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.history.push(\"/\");\n      }).catch(function (error) {\n        _this.setState({\n          loading: false\n        });\n\n        console.log(error.response);\n      });\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      //console.log(event.target.value);\n      //Deep Copy dynamically Changing\n      var updatedOrderForm = _objectSpread({}, _this.state.orderForm);\n\n      var updatedFormElement = _objectSpread({}, updatedOrderForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value; //Checking validation\n\n      updatedFormElement.valid = _this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n      updatedFormElement.touched = true;\n      console.log(updatedFormElement);\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var _inputIdentifier in updatedOrderForm) {\n        formIsValid = updatedOrderForm[_inputIdentifier].valid && formIsValid;\n      }\n\n      _this.setState({\n        orderForm: updatedOrderForm,\n        formIsValid: formIsValid\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (!rules) {\n        return true;\n      }\n\n      if (rules.required) {\n        isValid = value.trim() !== \"\" && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        onSubmit: this.orderHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        disabled: !this.state.formIsValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"ORDER\"));\n\n      if (this.state.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          boxSizing: \"border-box\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Enter Contact Form\"), form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(ContactData);","map":{"version":3,"sources":["/home/vbg/Downloads/Kiran-Softwares/burger-builder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","connect","axios","Button","Spinner","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","validation","required","minLength","maxLength","valid","touched","street","zipCode","country","email","deliveryMethod","options","displayValue","loading","formIsValid","orderHandler","event","preventDefault","setState","formData","formElementIndentifier","order","ingredients","props","ings","price","orderData","post","then","response","console","log","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","length","formElementsArray","key","id","config","form","map","formElement","boxSizing","textAlign","mapStateToProps","totalPrice"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../axios-orders\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport \"./ContactData.css\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Zip Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your EMail\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"Fastest\" },\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\n          ]\n        },\n        value: \"\",\n        validation: {},\n        valid: true\n      }\n    },\n    loading: false,\n    formIsValid: false\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    //console.log(this.props.ingredients);\n    this.setState({ loading: true });\n    const formData = {};\n    for (let formElementIndentifier in this.state.orderForm) {\n      formData[formElementIndentifier] = this.state.orderForm[\n        formElementIndentifier\n      ].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData\n    };\n\n    axios\n      .post(\"/orders.json\", order)\n      .then(response => {\n        console.log(response);\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ loading: false });\n        console.log(error.response);\n      });\n  };\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    //console.log(event.target.value);\n\n    //Deep Copy dynamically Changing\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    //Checking validation\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    console.log(updatedFormElement);\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n\n    return (\n      <div style={{ boxSizing: \"border-box\" }}>\n        <h4 style={{ textAlign: \"center\" }}>Enter Contact Form</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(ContactData);\n"]},"metadata":{},"sourceType":"module"}