{"version":3,"sources":["assets/images/burger-logo.png","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/Navigationitem/Navigationitem.js","components/Navigation/NavigationItems/Navigationitems.js","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Sidedrawer/Sidedrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngrediant/BurgerIngrediant.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","logo","react_default","a","createElement","className","height","navigationItem","NavLink","to","link","exact","navigationitems","Navigationitem_Navigationitem","drawerToggle","onClick","clicked","toolbar","DrawerToggle_DrawerToggle","drawerToggleClicked","Logo_Logo","NavigationItems_Navigationitems","backdrop","show","sideDrawer","attachedClasses","open","Aux","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerToggleHandler","prevState","Toolbar_Toolbar","this","Sidedrawer_Sidedrawer","Component","BurgerIngredient","ingredient","type","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","BurgerIngrediant_BurgerIngrediant","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","orderPrice","Button_Button","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","axios","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","errorConfirmedHandler","inherits","createClass","value","_this2","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","console","log","eject","UI_Modal_Modal","message","instance","create","baseURL","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelOrder","purchaseContinueHandler","history","push","sum","disableInfo","objectSpread","ings","orderSummary","Spinner_Spinner","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClassess","invalid","shouldValidate","touched","elementType","assign","elementConfig","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","minLength","maxLength","valid","street","zipCode","country","email","deliveryMethod","loading","formIsValid","orderHandler","event","preventDefault","formData","formElementIndentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Input_Input","boxSizing","textAlign","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","CheckoutSummary_CheckoutSummary","Route","path","match","component","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","get","fetchedOrders","data","err","Order_Order","App","hoc_Layout_Layout","Switch","Orders","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","undefined","action","defineProperty","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","burgerBuilderReducer","applyMiddleware","thunk","app","es","BrowserRouter","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db6fc538.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const aux = ( props ) => props.children;\n\nexport default aux;","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"Logo\" height=\"20%\">\n        {/* {<img src={burgerLogo} alt=\"MyBurger\" />} */}\n    </div>\n);\n\nexport default logo;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navigationitem.css\";\n\nconst navigationItem = props => (\n  <li className=\"NavigationItem\">\n    <NavLink to={props.link} exact={props.exact}>\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default navigationItem;\n","import React from \"react\";\nimport \"./Navigationitems.css\";\nimport NavigationItem from \"./Navigationitem/Navigationitem\";\n\nconst navigationitems = () => (\n  <ul className=\"NavigationItems\">\n    <NavigationItem link=\"/\" exact>\n      Burger Builder\n    </NavigationItem>\n    <NavigationItem link=\"/orders\">Orders</NavigationItem>\n  </ul>\n);\n\nexport default navigationitems;\n","import React from 'react';\nimport './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className=\"DrawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;\n\n","import React from 'react';\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/Navigationitems';\nimport DrawerToggle from '../Sidedrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className=\"Toolbar\">\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <div >\n          <Logo />\n        </div>\n        <nav className=\"DesktopOnly\">\n          <NavigationItems />\n        </nav>\n    </header>\n\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/Navigationitems';\nimport './Sidedrawer.css';\nimport BackDrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Aux/Aux';\n\nconst sideDrawer = (props) => {\n    \n    let attachedClasses = ['Sidedrawer', 'Close'];\n    if (props.open) {\n        attachedClasses = ['Sidedrawer', 'Open'];\n    }\n    \n    return (\n       \n        <Aux>\n            <BackDrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <Logo/>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Aux/Aux';\nimport './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/Sidedrawer/Sidedrawer';\n\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return { showSideDrawer: !this.state.showSideDrawer };\n        });\n    }\n\n\n    render() {\n        return (\n            <Aux>\n            <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\n            <SideDrawer \n                open ={this.state.showSideDrawer} \n                closed={this.sideDrawerClosedHandler}/>\n            <main className=\"Content\">\n                {this.props.children}\n            </main>\n        </Aux>\n        )\n    }\n}\nexport default Layout;","import React, { Component } from  'react';\nimport './BurgerIngrediant.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends Component {\n\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n        case ('bread-bottom'):\n        ingredient = <div className=\"BreadBottom\"></div>;\n        break;\n\n        case ('bread-top'):\n        ingredient = (\n            <div className=\"BreadTop\">\n                <div className=\"Seeds1\"></div>\n                <div className=\"Seeds2\"></div>         \n            </div>\n        );\n        break;\n        case('meat'):\n            ingredient = <div className=\"Meat\"></div>;\n        break;\n\n        case('cheese'):\n        ingredient = <div className=\"Cheese\"></div>;\n        break;\n\n        case('bacon'):\n        ingredient = <div className=\"Bacon\"></div>;\n        break;\n\n        case('salad'):\n        ingredient = <div className=\"Salad\"></div>;\n        break;\n        \n        default:\n        ingredient = null;\n\n      }\n      return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngrediant/BurgerIngrediant';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) => {\n           return <BurgerIngredient key={igKey + i} type={igKey} />\n        }); //Transforming Key value pair into an array.\n    })\n    .reduce((arr, el) => {//to check an empty array or if no ingredients\n        return arr.concat(el) \n    }, []);\n   \n    //Above code is to check array size is empty or not.\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients !!</p>\n    }\n\n\n    return (\n        <div className=\"Burger\">\n            <BurgerIngredient type=\"bread-top\"/>\n             {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n\n    );\n}\n\nexport default burger;","import React from 'react';\n\nimport './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className=\"BuildControl\">\n    <div className=\"Label\">{props.label}</div>\n    <button \n        className=\"Less\"\n        onClick={props.removed} \n        disabled={props.disabled}>Less</button>\n    <button \n        className=\"More\"\n        onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from  'react';\nimport './BuildControls.css';\nimport BuildControl from  './BuildControl/BuildControl';\n\nconst controls = [\n    {label: 'Salad', type: 'salad'},\n    {label: 'Bacon', type: 'bacon'},\n    {label: 'Cheese', type: 'cheese'},\n    {label: 'Meat', type: 'meat'}\n];\n\nconst buildControls = ( props ) => (\n    <div className=\"BuildControls\">\n    <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n    {controls.map(ctrl => (\n       <BuildControl \n            key={ctrl.label} \n            label={ctrl.label}\n            added={() => props.ingredientAdded(ctrl.type)} \n            removed={() => props.ingredientRemoved(ctrl.type)}\n            disabled = {props.disabled[ctrl.type]}/> \n    ))}\n\n    <button className=\"OrderButton\"\n    disabled={!props.purchasable}\n    onClick={props.ordered}>ORDER NOW</button>\n\n    </div>\n);\n\nexport  default buildControls;\n\n","import React, { Component } from 'react';\n\nimport './Modal.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    \n    shouldComponentUpdate (nextProps,  nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.children;\n    }\n\n    componentWillUpdate () {\n        //console.log(\"model  wil update\");\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                    <div className=\"Modal\" style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                        {this.props.children}\n                    </div>\n            </Aux>\n        );\n    }\n}\n\n\nexport default Modal;","import React from \"react\";\nimport \"./Button.css\";\n\nconst button = props => (\n  <button\n    disabled={props.disabled}\n    className={[\"Button\", props.btnType].join(\" \")}\n    onClick={props.clicked}\n  >\n    {props.children}\n  </button>\n);\n\nexport default button;\n","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a function component,  doesn't have to be a class component\n    componentWillUpdate() {\n        //console.log(\"Will Update\");\n    }\n\n    render() {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n            <li key={igKey}>\n                <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}</li>)\n        });\n        return (\n            <Aux>\n            <h3> Your Order</h3>\n            <p>A delicious Burger with the Following Ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price:{this.props.orderPrice.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n        </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"Loader\">Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Aux/Aux';\n\n//Component that covers other component so, passing wrappedComponent as props, which inside have\n//props // class factory anonymous class\nconst withErrorHandler = (WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n        componentWillMount () {\n            this.requestInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n    \n            this.responseInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n            });\n        }\n\n        //Removing interceptors once the component is mounted, hence avoiding memory/performance\n        componentWillUnmount () {\n            console.log('Will Unmount',this.requestInterceptor, this.responseInterceptor);\n            axios.interceptors.request.eject(this.requestInterceptor);\n            axios.interceptors.request.eject(this.responseInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        \n        render () {\n            return (\n                <Aux>\n                    <Modal show ={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props}/>\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL : 'https://react-another-project.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Aux from \"../../hoc/Aux/Aux\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\nimport axios from \"../../axios-orders\";\n\nclass BurgerBuilder extends Component {\n  // constructor(props) {\n  //     super(props) {\n  //         this.state = {...props}\n  //     };\n  // }\n\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    ;\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey];\n      })\n      .reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n\n    return sum > 0;\n  }\n\n  /*addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    //immutable way of changing state of ingredients\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n\n    if (oldCount <= 0) {\n      return;\n    }\n    const updatedCount = oldCount - 1;\n    //immutable way of changing state of ingredients\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceDeduction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceDeduction;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };*/\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelOrder = () => {\n    this.setState({ purchasing: false });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.history.push(\"/checkout\");\n  };\n\n  render() {\n    const disableInfo = {\n      ...this.props.ings\n    };\n    for (let key in disableInfo) {\n      disableInfo[key] = disableInfo[key] <= 0;\n    }\n\n    let orderSummary = null;\n    let burger = <Spinner />;\n\n    if (this.props.ings) {\n      burger = (\n        <Aux>\n          <Burger ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disableInfo}\n            purchasable={this.updatePurchaseState(this.props.ings)}\n            ordered={this.purchaseHandler}\n            price={this.props.price}\n          />\n        </Aux>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCancelled={this.purchaseCancelOrder}\n          purchaseContinued={this.purchaseContinueHandler}\n          orderPrice={this.props.price}\n        />\n      );\n    }\n\n\n    return (\n      <Aux>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelOrder}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </Aux>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingName =>\n      dispatch(burgerBuilderActions.addIngredient(ingName)),\n    onIngredientRemoved: ingName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingName))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const addIngredient = name => {\n  return {\n    type: actionTypes.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const removeIngredient = name => {\n  return {\n    type: actionTypes.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const setIngredients = (ingredients) => {\n  return {\n    type: actionTypes.SET_INGREDIENTS,\n    ingredients: ingredients\n  }\n}\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"https://react-another-project.firebaseio.com/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      }).catch( error => {\n         \n      });\n  }\n}","export const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\n\n","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className=\"CheckoutSummary\">\n            <h1>We hope it tastes well!</h1>\n            <div style={{width:'100%', margin:'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n\n            <Button \n            btnType=\"Danger\"\n            clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n            btnType=\"Success\"\n            clicked={props.checkoutContinued}>CONTINUE</Button>\n\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from \"react\";\nimport \"./Input.css\";\n\nconst input = props => {\n  let inputElement = null;\n  const inputClassess = [\"InputElement\"];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClassess.push(\"Invalid\");\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClassess.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClassess.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          onChange={props.changed}\n          className={inputClassess.join(\" \")}\n          value={props.value}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClassess.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n  }\n\n  return (\n    <div className=\"Input\">\n      <label className=\"Label\">{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"../../../axios-orders\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport \"./ContactData.css\";\nimport Input from \"../../../components/UI/Input/Input\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Zip Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your EMail\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"Fastest\" },\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\n          ]\n        },\n        value: \"\",\n        validation: {},\n        valid: true\n      }\n    },\n    loading: false,\n    formIsValid: false\n  };\n\n  orderHandler = event => {\n    event.preventDefault();\n    //console.log(this.props.ingredients);\n    this.setState({ loading: true });\n    const formData = {};\n    for (let formElementIndentifier in this.state.orderForm) {\n      formData[formElementIndentifier] = this.state.orderForm[\n        formElementIndentifier\n      ].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData\n    };\n\n    axios\n      .post(\"/orders.json\", order)\n      .then(response => {\n        console.log(response);\n        this.setState({ loading: false });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ loading: false });\n        console.log(error.response);\n      });\n  };\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  inputChangedHandler = (event, inputIdentifier) => {\n    //console.log(event.target.value);\n\n    //Deep Copy dynamically Changing\n    const updatedOrderForm = {\n      ...this.state.orderForm\n    };\n    const updatedFormElement = {\n      ...updatedOrderForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value;\n    //Checking validation\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n    updatedFormElement.touched = true;\n    console.log(updatedFormElement);\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={event => this.inputChangedHandler(event, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.state.loading) {\n      form = <Spinner />;\n    }\n\n    return (\n      <div style={{ boxSizing: \"border-box\" }}>\n        <h4 style={{ textAlign: \"center\" }}>Enter Contact Form</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nexport default connect(mapStateToProps)(ContactData);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport ContactData from \"../../containers/Checkout/ContactData/ContactData\";\nimport { connect } from \"react-redux\";\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    return (\n      <div>\n        <CheckoutSummary\n          ingredients={this.props.ings}\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}\n        />\n        <Route\n          path={this.props.match.path + \"/contact-data\"}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    //state.ingredients same name as in reducer\n    ings: state.ingredients\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport \"./Order.css\";\n\nconst order = props => {\n  const ingredients = [];\n\n  for (let ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  const ingredientOutput = ingredients.map(ig => {\n    return (\n      <span\n        style={{\n          textTransform: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          border: \"1px solid #ccc\",\n          padding: \"5px\"\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n\n  return (\n    <div className=\"Order\">\n      <p>Ingredients: {ingredientOutput}</p>\n      <p>\n        Price: <strong>INR {Number.parseFloat(props.price).toFixed(2)}</strong>\n      </p>\n    </div>\n  );\n};\n\nexport default order;\n","import React, { Component } from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  state = {\n    orders: [],\n    loading: true\n  };\n  componentDidMount() {\n    axios\n      .get(\"orders.json\")\n      .then(res => {\n        //console.log(res.data);\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n\n        this.setState({ loading: false, orders: fetchedOrders });\n      })\n      .catch(err => {\n        this.setState({ loading: false });\n      });\n  }\n  render() {\n    return (\n      <div>\n        {this.state.orders.map(order => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={+order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default withErrorHandler(Orders, axios);\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"../src/containers/Checkout/Checkout\";\nimport Orders from \"../src/containers/Orders/Orders\";\n\n// class App extends Component {\n//   state = {\n//     show: true\n//   };\n\n//   componentDidMount() {\n//     setTimeout(() => {\n//       this.setState({show: false});\n//     }, 5000);\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Layout>\n//           {this.state.show ? <BurgerBuilder /> : null}\n//         </Layout>\n//       </div>\n//     );\n//   }\n// }\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionsType from \"../actions/actionTypes\";\n\nconst initialState = {\n  ingredients: {\n    salad: 0,\n    bacon: 0,\n    cheese: 0,\n    meat: 0\n  },\n  totalPrice: 4\n};\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsType.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n\n    case actionsType.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  burgerBuilderReducer,composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}